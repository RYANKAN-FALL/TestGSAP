{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../node_modules/.pnpm/@finsweet+ts-utils@0.40.0/node_modules/@finsweet/ts-utils/dist/webflow/getPublishDate.js", "../src/utils/greet.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\r\n", "/**\n * Extracts the publish date of a Webflow site\n * @returns A Date object, if found.\n * @param page The page to get the publish date from. Defaults to the current page.\n */\nexport const getPublishDate = (page = document) => {\n    const publishDatePrefix = 'Last Published:';\n    for (const node of page.childNodes) {\n        if (node.nodeType === Node.COMMENT_NODE && node.textContent?.includes(publishDatePrefix)) {\n            const publishDateValue = node.textContent.trim().split(publishDatePrefix)[1];\n            if (publishDateValue)\n                return new Date(publishDateValue);\n        }\n    }\n};\n", "import { getPublishDate } from '@finsweet/ts-utils';\r\n\r\n/**\r\n * Greets the user by printing a message in the console.\r\n * @param name The user's name.\r\n */\r\nexport const greetUser = (name: string) => {\r\n  const publishDate = getPublishDate();\r\n\r\n  console.log(`Hello ${name}!`);\r\n  console.log(\r\n    `This site was last published on ${publishDate?.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: '2-digit',\r\n    })}.`\r\n  );\r\n};\r\n", "import { greetUser } from '$utils/greet';\r\n\r\nwindow.Webflow = window.Webflow || [];\r\nwindow.Webflow.push(async () => {\r\n  const name = 'John Doe';\r\n  greetUser(name);\r\n  function searchCMS(titleToSearch: string) {\r\n    const itemElements = document.querySelectorAll('[data-element=\"cms-item\"]');\r\n    const titleElements = document.querySelectorAll('[data-element=\"cms-title\"]');\r\n\r\n    console.log('CMS Item Elements:', itemElements);\r\n    console.log('CMS Title Elements:', titleElements);\r\n\r\n    const searchQuery = titleToSearch.toLowerCase(); // Convert the search query to lowercase\r\n\r\n    titleElements.forEach((titleElement, index) => {\r\n      const titleText = titleElement.textContent?.toLowerCase(); // Use optional chaining to handle possible null\r\n\r\n      // Check if the current title matches the searchQuery\r\n      if (titleText && titleText.includes(searchQuery)) {\r\n        const correspondingItem = itemElements[index];\r\n        console.log('Title Text:', titleText);\r\n        console.log('Corresponding CMS Item:', correspondingItem);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Add an event listener to the input field with data-element=\"cms-search\"\r\n  const searchInput = document.querySelector<HTMLInputElement>('[data-element=\"cms-search\"]'); // Use HTMLInputElement to specify the type\r\n  if (searchInput) {\r\n    searchInput.addEventListener('input', function () {\r\n      const titleToSearch = this.value;\r\n      searchCMS(titleToSearch);\r\n    });\r\n  }\r\n});\r\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACKtF,MAAM,iBAAiB,CAAC,OAAO,aAAa;AAC/C,UAAM,oBAAoB;AAC1B,eAAW,QAAQ,KAAK,YAAY;AAChC,UAAI,KAAK,aAAa,KAAK,gBAAgB,KAAK,aAAa,SAAS,iBAAiB,GAAG;AACtF,cAAM,mBAAmB,KAAK,YAAY,KAAK,EAAE,MAAM,iBAAiB,EAAE,CAAC;AAC3E,YAAI;AACA,iBAAO,IAAI,KAAK,gBAAgB;AAAA,MACxC;AAAA,IACJ;AAAA,EACJ;;;ACRO,MAAM,YAAY,CAAC,SAAiB;AACzC,UAAM,cAAc,eAAe;AAEnC,YAAQ,IAAI,SAAS,IAAI,GAAG;AAC5B,YAAQ;AAAA,MACN,mCAAmC,aAAa,mBAAmB,SAAS;AAAA,QAC1E,MAAM;AAAA,QACN,OAAO;AAAA,QACP,KAAK;AAAA,MACP,CAAC,CAAC;AAAA,IACJ;AAAA,EACF;;;ACfA,SAAO,UAAU,OAAO,WAAW,CAAC;AACpC,SAAO,QAAQ,KAAK,YAAY;AAC9B,UAAM,OAAO;AACb,cAAU,IAAI;AACd,aAAS,UAAU,eAAuB;AACxC,YAAM,eAAe,SAAS,iBAAiB,2BAA2B;AAC1E,YAAM,gBAAgB,SAAS,iBAAiB,4BAA4B;AAE5E,cAAQ,IAAI,sBAAsB,YAAY;AAC9C,cAAQ,IAAI,uBAAuB,aAAa;AAEhD,YAAM,cAAc,cAAc,YAAY;AAE9C,oBAAc,QAAQ,CAAC,cAAc,UAAU;AAC7C,cAAM,YAAY,aAAa,aAAa,YAAY;AAGxD,YAAI,aAAa,UAAU,SAAS,WAAW,GAAG;AAChD,gBAAM,oBAAoB,aAAa,KAAK;AAC5C,kBAAQ,IAAI,eAAe,SAAS;AACpC,kBAAQ,IAAI,2BAA2B,iBAAiB;AAAA,QAC1D;AAAA,MACF,CAAC;AAAA,IACH;AAGA,UAAM,cAAc,SAAS,cAAgC,6BAA6B;AAC1F,QAAI,aAAa;AACf,kBAAY,iBAAiB,SAAS,WAAY;AAChD,cAAM,gBAAgB,KAAK;AAC3B,kBAAU,aAAa;AAAA,MACzB,CAAC;AAAA,IACH;AAAA,EACF,CAAC;",
  "names": []
}
